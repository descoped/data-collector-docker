kind: pipeline
name: default

steps:
  # Restore the cache if it exists
#  - name: restore-cache
#    image: homerovalle/drone-gcs-cache
#    settings:
#      pull: true
#      bucket: bip-drone-dependency-cache
#      json_key:
#        from_secret: gcs_credentials
#      restore: true

  - name: authenticate
    image: robertstettner/drone-mvn-auth
    pull: always
    settings:
      servers:
        from_secret: maven_servers
      profiles:
        - id: ssb-bip
          repositories:
            - id: ssb-bip-snapshots
              url: https://nexus.prod-bip-ci.ssb.no/repository/maven-snapshots/
              layout: default
            - id: ssb-bip-releases
              url: https://nexus.prod-bip-ci.ssb.no/repository/maven-releases/
              layout: default

  - name: build
    image: maven:3-jdk-11
    commands:
      - mvn compile -P ssb-bip -DskipTests=true -Dmaven.javadoc.skip=true --batch-mode --global-settings settings.xml
    environment:
      MAVEN_HOME: /drone/src/.m2
      M2_HOME: /drone/src/.m2
    depends_on:
      - authenticate

  - name: test
    image: maven:3-jdk-11
    commands:
      - mvn verify test -P ssb-bip,coverage --batch-mode --global-settings settings.xml
    environment:
      MAVEN_HOME: /drone/src/.m2
      M2_HOME: /drone/src/.m2
    depends_on:
      - build

  - name: codecov-manual
    image: alpine:3
    commands:
      - apk add --no-cache bash curl findutils git
      - curl -s https://codecov.io/bash | bash
    environment:
      CODECOV_TOKEN:
        from_secret: codecov_token
    depends_on:
      - test

  - name: codecov-plugin
    image: plugins/codecov
    settings:
      token:
        from_secret: codecov_token
    depends_on:
      - test

  - name: codacy
    image: maven:3-jdk-11
    commands:
      - curl -Ls -o codacy-coverage-reporter "https://dl.bintray.com/codacy/Binaries/6.0.6/codacy-coverage-reporter-linux"
      - chmod +x codacy-coverage-reporter
      - ./codacy-coverage-reporter report -l Java -r target/site/jacoco/jacoco.xml
    environment:
      CODACY_PROJECT_TOKEN:
        from_secret: codacy_token
    depends_on:
      - test

  - name: code-analysis
    image: aosapps/drone-sonar-plugin
    settings:
      sonar_host:
        from_secret: sonar_host
      sonar_token:
        from_secret: sonar_token
    depends_on:
      - test

  - name: data-collector
    image: plugins/gcr
    settings:
      dockerfile: service/Dockerfile-dev
      repo: eu.gcr.io/prod-bip/data-collector
      registry: eu.gcr.io
      tags:
        - latest
        - ${DRONE_BRANCH}-${DRONE_COMMIT_SHA:0:8}
      json_key:
        from_secret: gcr_credentials
    depends_on:
      - build

  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook_url
      channel: bip-ci-test
    when:
      status: [ success, failure ]
    depends_on:
      - test

---
kind: secret
name: maven_servers
get:
  path: drone-maven-servers
  name: ssb-bip-maven-servers

---
kind: secret
name: slack_webhook_url
get:
  path: drone-slack-webhook-url
  name: slack-webhook-url
---
kind: secret
name: sonar_host
get:
  path: drone-sonarqube-configuration
  name: url
---
kind: secret
name: sonar_token
get:
  path: drone-sonarqube-configuration
  name: token
